{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst items = localStorage.getItem(\"cartItems\") !== null ? JSON.parse(localStorage.getItem(\"cartItems\")) : [];\nconst totalAmount = localStorage.getItem(\"totalAmount\") !== null ? JSON.parse(localStorage.getItem(\"totalAmount\")) : 0;\nconst totalQuantity = localStorage.getItem(\"totalQuantity\") !== null ? JSON.parse(localStorage.getItem(\"totalQuantity\")) : 0;\n\nconst setItemFunc = (item, totalAmount, totalQuantity) => {\n  localStorage.setItem(\"cartItems\", JSON.stringify(item));\n  localStorage.setItem(\"totalAmount\", JSON.stringify(totalAmount));\n  localStorage.setItem(\"totalQuantity\", JSON.stringify(totalQuantity));\n};\n\nconst initialState = {\n  cartItems: items,\n  totalQuantity: totalQuantity,\n  totalAmount: totalAmount\n};\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState,\n  reducers: {\n    // =========== add item ============\n    addItem(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.cartItems.find(item => item.id === newItem.id);\n      state.totalQuantity++;\n\n      if (!existingItem) {\n        // ===== note: if you use just redux you should not mute state array instead of clone the state array, but if you use redux toolkit that will not a problem because redux toolkit clone the array behind the scene\n        state.cartItems.push({\n          id: newItem.id,\n          title: newItem.title,\n          image01: newItem.image01,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price\n        });\n      } else {\n        existingItem.quantity++;\n        existingItem.totalPrice = Number(existingItem.totalPrice) + Number(newItem.price);\n      }\n\n      state.totalAmount = state.cartItems.reduce((total, item) => total + Number(item.price) * Number(item.quantity), 0);\n      setItemFunc(state.cartItems.map(item => item), state.totalAmount, state.totalQuantity);\n    },\n\n    // ========= remove item ========\n    removeItem(state, action) {\n      const id = action.payload;\n      const existingItem = state.cartItems.find(item => item.id === id);\n      state.totalQuantity--;\n\n      if (existingItem.quantity === 1) {\n        state.cartItems = state.cartItems.filter(item => item.id !== id);\n      } else {\n        existingItem.quantity--;\n        existingItem.totalPrice = Number(existingItem.totalPrice) - Number(existingItem.price);\n      }\n\n      state.totalAmount = state.cartItems.reduce((total, item) => total + Number(item.price) * Number(item.quantity), 0);\n      setItemFunc(state.cartItems.map(item => item), state.totalAmount, state.totalQuantity);\n    },\n\n    //============ delete item ===========\n    deleteItem(state, action) {\n      const id = action.payload;\n      const existingItem = state.cartItems.find(item => item.id === id);\n\n      if (existingItem) {\n        state.cartItems = state.cartItems.filter(item => item.id !== id);\n        state.totalQuantity = state.totalQuantity - existingItem.quantity;\n      }\n\n      state.totalAmount = state.cartItems.reduce((total, item) => total + Number(item.price) * Number(item.quantity), 0);\n      setItemFunc(state.cartItems.map(item => item), state.totalAmount, state.totalQuantity);\n    }\n\n  }\n});\nexport const cartActions = cartSlice.actions;\nexport default cartSlice;","map":{"version":3,"sources":["/home/global/Projects/zaliczenie/React-food-delivery-app/src/store/shopping-cart/cartSlice.js"],"names":["createSlice","items","localStorage","getItem","JSON","parse","totalAmount","totalQuantity","setItemFunc","item","setItem","stringify","initialState","cartItems","cartSlice","name","reducers","addItem","state","action","newItem","payload","existingItem","find","id","push","title","image01","price","quantity","totalPrice","Number","reduce","total","map","removeItem","filter","deleteItem","cartActions","actions"],"mappings":"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","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst items =\n  localStorage.getItem(\"cartItems\") !== null\n    ? JSON.parse(localStorage.getItem(\"cartItems\"))\n    : [];\n\nconst totalAmount =\n  localStorage.getItem(\"totalAmount\") !== null\n    ? JSON.parse(localStorage.getItem(\"totalAmount\"))\n    : 0;\n\nconst totalQuantity =\n  localStorage.getItem(\"totalQuantity\") !== null\n    ? JSON.parse(localStorage.getItem(\"totalQuantity\"))\n    : 0;\n\nconst setItemFunc = (item, totalAmount, totalQuantity) => {\n  localStorage.setItem(\"cartItems\", JSON.stringify(item));\n  localStorage.setItem(\"totalAmount\", JSON.stringify(totalAmount));\n  localStorage.setItem(\"totalQuantity\", JSON.stringify(totalQuantity));\n};\n\nconst initialState = {\n  cartItems: items,\n  totalQuantity: totalQuantity,\n  totalAmount: totalAmount,\n};\n\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState,\n\n  reducers: {\n    // =========== add item ============\n    addItem(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.cartItems.find(\n        (item) => item.id === newItem.id\n      );\n      state.totalQuantity++;\n\n      if (!existingItem) {\n        // ===== note: if you use just redux you should not mute state array instead of clone the state array, but if you use redux toolkit that will not a problem because redux toolkit clone the array behind the scene\n\n        state.cartItems.push({\n          id: newItem.id,\n          title: newItem.title,\n          image01: newItem.image01,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n        });\n      } else {\n        existingItem.quantity++;\n        existingItem.totalPrice =\n          Number(existingItem.totalPrice) + Number(newItem.price);\n      }\n\n      state.totalAmount = state.cartItems.reduce(\n        (total, item) => total + Number(item.price) * Number(item.quantity),\n\n        0\n      );\n\n      setItemFunc(\n        state.cartItems.map((item) => item),\n        state.totalAmount,\n        state.totalQuantity\n      );\n    },\n\n    // ========= remove item ========\n\n    removeItem(state, action) {\n      const id = action.payload;\n      const existingItem = state.cartItems.find((item) => item.id === id);\n      state.totalQuantity--;\n\n      if (existingItem.quantity === 1) {\n        state.cartItems = state.cartItems.filter((item) => item.id !== id);\n      } else {\n        existingItem.quantity--;\n        existingItem.totalPrice =\n          Number(existingItem.totalPrice) - Number(existingItem.price);\n      }\n\n      state.totalAmount = state.cartItems.reduce(\n        (total, item) => total + Number(item.price) * Number(item.quantity),\n        0\n      );\n\n      setItemFunc(\n        state.cartItems.map((item) => item),\n        state.totalAmount,\n        state.totalQuantity\n      );\n    },\n\n    //============ delete item ===========\n\n    deleteItem(state, action) {\n      const id = action.payload;\n      const existingItem = state.cartItems.find((item) => item.id === id);\n\n      if (existingItem) {\n        state.cartItems = state.cartItems.filter((item) => item.id !== id);\n        state.totalQuantity = state.totalQuantity - existingItem.quantity;\n      }\n\n      state.totalAmount = state.cartItems.reduce(\n        (total, item) => total + Number(item.price) * Number(item.quantity),\n        0\n      );\n      setItemFunc(\n        state.cartItems.map((item) => item),\n        state.totalAmount,\n        state.totalQuantity\n      );\n    },\n  },\n});\n\nexport const cartActions = cartSlice.actions;\nexport default cartSlice;\n"]},"metadata":{},"sourceType":"module"}